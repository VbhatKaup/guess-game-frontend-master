{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\guess-game-frontend-master\\\\src\\\\pages\\\\GuessGhibli.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./GuessGhibli.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseNames = [\"question_2question_[]\", \"question_7514\", \"question_10\", \"question_dateadd\", \"question_default\", \"question_groupby\", \"question_idea\", \"question_isnull\", \"question_keyboard\", \"question_lambda\", \"question_m\", \"question_maine\", \"question_match\", \"question_o\", \"question_pomeranian\", \"question_string\", \"salman khan\", \"bhaskar+vishnu+suresh\", \"ravi teja\", \"rashmika mandana\", \"priyanka chopra\", \"nana patekar\", \"mahesh babu\", \"jeff bezos\", \"hrithik roshan\", \"bramhanandam\", \"bhaskar\", \"raju\", \"shravan\", \"vineela+laxmi+poojita\"];\nconst extensions = [\"jpg\", \"jpeg\", \"png\"];\nconst GuessGhibli = () => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [hasStarted, setHasStarted] = useState(false);\n  const [imagePairs, setImagePairs] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showOriginal, setShowOriginal] = useState(false);\n  const [timer, setTimer] = useState(2);\n  const [answer, setAnswer] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameEnded, setGameEnded] = useState(false);\n  const checkImage = src => {\n    return new Promise(resolve => {\n      const img = new Image();\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = src;\n    });\n  };\n  const findValidImage = async baseName => {\n    for (const ext of extensions) {\n      const url = `/images/${baseName}.${ext}`;\n      const exists = await checkImage(url);\n      if (exists) return url;\n    }\n    return null;\n  };\n  useEffect(() => {\n    const loadImages = async () => {\n      const pairs = [];\n      for (const base of baseNames) {\n        const ghibliImg = await findValidImage(`${base}_gibili`);\n        const originalImg = await findValidImage(base);\n        if (originalImg) {\n          pairs.push({\n            ghibli: ghibliImg || undefined,\n            original: originalImg,\n            baseName: base,\n            type: ghibliImg ? \"ghibli\" : \"quiz\"\n          });\n        }\n      }\n      setImagePairs(pairs);\n    };\n    loadImages();\n  }, []);\n  useEffect(() => {\n    if (gameEnded || !hasStarted) return;\n    const current = imagePairs[currentIndex];\n    if (!showOriginal) {\n      if (timer > 0) {\n        const interval = setInterval(() => setTimer(prev => prev - 1), 1000);\n        return () => clearInterval(interval);\n      } else {\n        if (current.type === \"ghibli\") {\n          setShowOriginal(true);\n        } else {\n          // For quiz-type questions, just go to next question\n          setShowOriginal(true);\n        }\n      }\n    } else {\n      const timeout = setTimeout(() => {\n        if (currentIndex + 1 >= imagePairs.length) {\n          setGameEnded(true);\n        } else {\n          setCurrentIndex(prev => prev + 1);\n          setTimer(2);\n          setAnswer(\"\");\n          setSubmitted(false);\n          setShowOriginal(false);\n        }\n      }, 1000);\n      return () => clearTimeout(timeout);\n    }\n  }, [timer, showOriginal, currentIndex, imagePairs.length, gameEnded, hasStarted]);\n  const handleSubmit = () => {\n    setSubmitted(true);\n    const correctParts = imagePairs[currentIndex].baseName.toLowerCase().split(\"+\").map(part => part.trim());\n    const userAnswer = answer.toLowerCase().trim();\n    if (correctParts.some(name => userAnswer.includes(name))) {\n      setScore(prev => prev + 1);\n    }\n  };\n  if (!hasStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFA8 Welcome to Guess the Ghibli!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (userName.trim() !== \"\") setHasStarted(true);\n        },\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n  if (imagePairs.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 39\n  }, this);\n  const current = imagePairs[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guess-ghibli-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: current.type === \"ghibli\" ? \"Guess the Character (Ghibli Edition)\" : \"Quiz Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Hello, \", userName, \"! \\uD83D\\uDC4B\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), !gameEnded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timer\",\n        children: [\"\\u23F1\\uFE0F Timer: \", timer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [current.type === \"ghibli\" && !showOriginal && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: current.ghibli,\n          alt: \"Ghibli\",\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), current.type === \"ghibli\" && showOriginal && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: current.ghibli,\n            alt: \"Ghibli\",\n            className: \"image side-by-side\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: current.original,\n            alt: \"Original\",\n            className: \"image side-by-side\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), current.type === \"quiz\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: current.original,\n          alt: \"Quiz\",\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), !showOriginal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your guess\",\n          value: answer,\n          onChange: e => setAnswer(e.target.value),\n          disabled: submitted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: submitted,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), submitted && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          children: \"Answer submitted! Revealing soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this), showOriginal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2705 Correct Answer: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: current.baseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCDD Your answer: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: answer || \"(No answer given)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Score: \", score, \"/\", imagePairs.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Next image in 5 seconds...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-final\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uD83C\\uDF89 Game Over, \", userName, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You scored \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 24\n        }, this), \" out of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: imagePairs.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thanks for playing!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(GuessGhibli, \"Mui5C4gKBEILVJvBFbcN6qX3r5s=\");\n_c = GuessGhibli;\nexport default GuessGhibli;\nvar _c;\n$RefreshReg$(_c, \"GuessGhibli\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","baseNames","extensions","GuessGhibli","_s","userName","setUserName","hasStarted","setHasStarted","imagePairs","setImagePairs","currentIndex","setCurrentIndex","showOriginal","setShowOriginal","timer","setTimer","answer","setAnswer","submitted","setSubmitted","score","setScore","gameEnded","setGameEnded","checkImage","src","Promise","resolve","img","Image","onload","onerror","findValidImage","baseName","ext","url","exists","loadImages","pairs","base","ghibliImg","originalImg","push","ghibli","undefined","original","type","current","interval","setInterval","prev","clearInterval","timeout","setTimeout","length","clearTimeout","handleSubmit","correctParts","toLowerCase","split","map","part","trim","userAnswer","some","name","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","alt","disabled","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/guess-game-frontend-master/src/pages/GuessGhibli.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./GuessGhibli.css\";\n\ntype ImagePair = {\n  ghibli?: string; // optional\n  original: string;\n  baseName: string;\n  type: \"ghibli\" | \"quiz\";\n};\n\nconst baseNames = [\n  \"question_2question_[]\",\n  \"question_7514\",\n  \"question_10\",\n  \"question_dateadd\",\n  \"question_default\",\n  \"question_groupby\",\n  \"question_idea\",\n  \"question_isnull\",\n  \"question_keyboard\",\n  \"question_lambda\",\n  \"question_m\",\n  \"question_maine\",\n  \"question_match\",\n  \"question_o\",\n  \"question_pomeranian\",\n  \"question_string\",\n  \"salman khan\",\n  \"bhaskar+vishnu+suresh\",\n  \"ravi teja\",\n  \"rashmika mandana\",\n  \"priyanka chopra\",\n  \"nana patekar\",\n  \"mahesh babu\",\n  \"jeff bezos\",\n  \"hrithik roshan\",\n  \"bramhanandam\",\n  \"bhaskar\",\n  \"raju\",\n  \"shravan\",\n  \"vineela+laxmi+poojita\",\n];\n\nconst extensions = [\"jpg\", \"jpeg\", \"png\"];\n\nconst GuessGhibli: React.FC = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [hasStarted, setHasStarted] = useState(false);\n  const [imagePairs, setImagePairs] = useState<ImagePair[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showOriginal, setShowOriginal] = useState(false);\n  const [timer, setTimer] = useState(2);\n  const [answer, setAnswer] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameEnded, setGameEnded] = useState(false);\n\n  const checkImage = (src: string): Promise<boolean> => {\n    return new Promise((resolve) => {\n      const img = new Image();\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = src;\n    });\n  };\n\n  const findValidImage = async (baseName: string): Promise<string | null> => {\n    for (const ext of extensions) {\n      const url = `/images/${baseName}.${ext}`;\n      const exists = await checkImage(url);\n      if (exists) return url;\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    const loadImages = async () => {\n      const pairs: ImagePair[] = [];\n\n      for (const base of baseNames) {\n        const ghibliImg = await findValidImage(`${base}_gibili`);\n        const originalImg = await findValidImage(base);\n\n        if (originalImg) {\n          pairs.push({\n            ghibli: ghibliImg || undefined,\n            original: originalImg,\n            baseName: base,\n            type: ghibliImg ? \"ghibli\" : \"quiz\",\n          });\n        }\n      }\n\n      setImagePairs(pairs);\n    };\n\n    loadImages();\n  }, []);\n\n  useEffect(() => {\n    if (gameEnded || !hasStarted) return;\n\n    const current = imagePairs[currentIndex];\n\n    if (!showOriginal) {\n      if (timer > 0) {\n        const interval = setInterval(() => setTimer((prev) => prev - 1), 1000);\n        return () => clearInterval(interval);\n      } else {\n        if (current.type === \"ghibli\") {\n          setShowOriginal(true);\n        } else {\n          // For quiz-type questions, just go to next question\n          setShowOriginal(true);\n        }\n      }\n    } else {\n      const timeout = setTimeout(() => {\n        if (currentIndex + 1 >= imagePairs.length) {\n          setGameEnded(true);\n        } else {\n          setCurrentIndex((prev) => prev + 1);\n          setTimer(2);\n          setAnswer(\"\");\n          setSubmitted(false);\n          setShowOriginal(false);\n        }\n      }, 1000);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [timer, showOriginal, currentIndex, imagePairs.length, gameEnded, hasStarted]);\n\n  const handleSubmit = () => {\n    setSubmitted(true);\n\n    const correctParts = imagePairs[currentIndex].baseName\n      .toLowerCase()\n      .split(\"+\")\n      .map((part) => part.trim());\n\n    const userAnswer = answer.toLowerCase().trim();\n\n    if (correctParts.some((name) => userAnswer.includes(name))) {\n      setScore((prev) => prev + 1);\n    }\n  };\n\n  if (!hasStarted) {\n    return (\n      <div className=\"login-screen\">\n        <h2>🎨 Welcome to Guess the Ghibli!</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your name\"\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n        />\n        <button\n          onClick={() => {\n            if (userName.trim() !== \"\") setHasStarted(true);\n          }}\n        >\n          Start Game\n        </button>\n      </div>\n    );\n  }\n\n  if (imagePairs.length === 0) return <div className=\"loading\">Loading...</div>;\n\n  const current = imagePairs[currentIndex];\n\n  return (\n    <div className=\"guess-ghibli-container\">\n      <h1>{current.type === \"ghibli\" ? \"Guess the Character (Ghibli Edition)\" : \"Quiz Mode\"}</h1>\n      <h2>Hello, {userName}! 👋</h2>\n\n      {!gameEnded ? (\n        <>\n          <p className=\"timer\">⏱️ Timer: {timer}s</p>\n          <div className=\"image-container\">\n            {current.type === \"ghibli\" && !showOriginal && (\n              <img src={current.ghibli} alt=\"Ghibli\" className=\"image\" />\n            )}\n\n            {current.type === \"ghibli\" && showOriginal && (\n              <>\n                <img src={current.ghibli} alt=\"Ghibli\" className=\"image side-by-side\" />\n                <img src={current.original} alt=\"Original\" className=\"image side-by-side\" />\n              </>\n            )}\n\n            {current.type === \"quiz\" && (\n              <img src={current.original} alt=\"Quiz\" className=\"image\" />\n            )}\n          </div>\n\n          {!showOriginal && (\n            <div className=\"input-section\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter your guess\"\n                value={answer}\n                onChange={(e) => setAnswer(e.target.value)}\n                disabled={submitted}\n              />\n              <button onClick={handleSubmit} disabled={submitted}>\n                Submit\n              </button>\n              {submitted && <p className=\"feedback\">Answer submitted! Revealing soon...</p>}\n            </div>\n          )}\n\n          {showOriginal && (\n            <div className=\"result-section\">\n              <p>\n                ✅ Correct Answer: <strong>{current.baseName}</strong>\n              </p>\n              <p>\n                📝 Your answer: <strong>{answer || \"(No answer given)\"}</strong>\n              </p>\n              <p>Current Score: {score}/{imagePairs.length}</p>\n              <p>Next image in 5 seconds...</p>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"result-final\">\n          <h2>🎉 Game Over, {userName}!</h2>\n          <p>\n            You scored <strong>{score}</strong> out of <strong>{imagePairs.length}</strong>\n          </p>\n          <p>Thanks for playing!</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GuessGhibli;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAS3B,MAAMC,SAAS,GAAG,CAChB,uBAAuB,EACvB,eAAe,EACf,aAAa,EACb,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,eAAe,EACf,iBAAiB,EACjB,mBAAmB,EACnB,iBAAiB,EACjB,YAAY,EACZ,gBAAgB,EAChB,gBAAgB,EAChB,YAAY,EACZ,qBAAqB,EACrB,iBAAiB,EACjB,aAAa,EACb,uBAAuB,EACvB,WAAW,EACX,kBAAkB,EAClB,iBAAiB,EACjB,cAAc,EACd,aAAa,EACb,YAAY,EACZ,gBAAgB,EAChB,cAAc,EACd,SAAS,EACT,MAAM,EACN,SAAS,EACT,uBAAuB,CACxB;AAED,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC;AAEzC,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAc,EAAE,CAAC;EAC7D,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM6B,UAAU,GAAIC,GAAW,IAAuB;IACpD,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9B,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,MAAM,GAAG,MAAMH,OAAO,CAAC,IAAI,CAAC;MAChCC,GAAG,CAACG,OAAO,GAAG,MAAMJ,OAAO,CAAC,KAAK,CAAC;MAClCC,GAAG,CAACH,GAAG,GAAGA,GAAG;IACf,CAAC,CAAC;EACJ,CAAC;EAED,MAAMO,cAAc,GAAG,MAAOC,QAAgB,IAA6B;IACzE,KAAK,MAAMC,GAAG,IAAIjC,UAAU,EAAE;MAC5B,MAAMkC,GAAG,GAAG,WAAWF,QAAQ,IAAIC,GAAG,EAAE;MACxC,MAAME,MAAM,GAAG,MAAMZ,UAAU,CAACW,GAAG,CAAC;MACpC,IAAIC,MAAM,EAAE,OAAOD,GAAG;IACxB;IACA,OAAO,IAAI;EACb,CAAC;EAEDzC,SAAS,CAAC,MAAM;IACd,MAAM2C,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,KAAkB,GAAG,EAAE;MAE7B,KAAK,MAAMC,IAAI,IAAIvC,SAAS,EAAE;QAC5B,MAAMwC,SAAS,GAAG,MAAMR,cAAc,CAAC,GAAGO,IAAI,SAAS,CAAC;QACxD,MAAME,WAAW,GAAG,MAAMT,cAAc,CAACO,IAAI,CAAC;QAE9C,IAAIE,WAAW,EAAE;UACfH,KAAK,CAACI,IAAI,CAAC;YACTC,MAAM,EAAEH,SAAS,IAAII,SAAS;YAC9BC,QAAQ,EAAEJ,WAAW;YACrBR,QAAQ,EAAEM,IAAI;YACdO,IAAI,EAAEN,SAAS,GAAG,QAAQ,GAAG;UAC/B,CAAC,CAAC;QACJ;MACF;MAEA/B,aAAa,CAAC6B,KAAK,CAAC;IACtB,CAAC;IAEDD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN3C,SAAS,CAAC,MAAM;IACd,IAAI4B,SAAS,IAAI,CAAChB,UAAU,EAAE;IAE9B,MAAMyC,OAAO,GAAGvC,UAAU,CAACE,YAAY,CAAC;IAExC,IAAI,CAACE,YAAY,EAAE;MACjB,IAAIE,KAAK,GAAG,CAAC,EAAE;QACb,MAAMkC,QAAQ,GAAGC,WAAW,CAAC,MAAMlC,QAAQ,CAAEmC,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;QACtE,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;MACtC,CAAC,MAAM;QACL,IAAID,OAAO,CAACD,IAAI,KAAK,QAAQ,EAAE;UAC7BjC,eAAe,CAAC,IAAI,CAAC;QACvB,CAAC,MAAM;UACL;UACAA,eAAe,CAAC,IAAI,CAAC;QACvB;MACF;IACF,CAAC,MAAM;MACL,MAAMuC,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/B,IAAI3C,YAAY,GAAG,CAAC,IAAIF,UAAU,CAAC8C,MAAM,EAAE;UACzC/B,YAAY,CAAC,IAAI,CAAC;QACpB,CAAC,MAAM;UACLZ,eAAe,CAAEuC,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;UACnCnC,QAAQ,CAAC,CAAC,CAAC;UACXE,SAAS,CAAC,EAAE,CAAC;UACbE,YAAY,CAAC,KAAK,CAAC;UACnBN,eAAe,CAAC,KAAK,CAAC;QACxB;MACF,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAM0C,YAAY,CAACH,OAAO,CAAC;IACpC;EACF,CAAC,EAAE,CAACtC,KAAK,EAAEF,YAAY,EAAEF,YAAY,EAAEF,UAAU,CAAC8C,MAAM,EAAEhC,SAAS,EAAEhB,UAAU,CAAC,CAAC;EAEjF,MAAMkD,YAAY,GAAGA,CAAA,KAAM;IACzBrC,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMsC,YAAY,GAAGjD,UAAU,CAACE,YAAY,CAAC,CAACuB,QAAQ,CACnDyB,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IAE7B,MAAMC,UAAU,GAAG/C,MAAM,CAAC0C,WAAW,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;IAE9C,IAAIL,YAAY,CAACO,IAAI,CAAEC,IAAI,IAAKF,UAAU,CAACG,QAAQ,CAACD,IAAI,CAAC,CAAC,EAAE;MAC1D5C,QAAQ,CAAE6B,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IAC9B;EACF,CAAC;EAED,IAAI,CAAC5C,UAAU,EAAE;IACf,oBACET,OAAA;MAAKsE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BvE,OAAA;QAAAuE,QAAA,EAAI;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxC3E,OAAA;QACEiD,IAAI,EAAC,MAAM;QACX2B,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAEtE,QAAS;QAChBuE,QAAQ,EAAGC,CAAC,IAAKvE,WAAW,CAACuE,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACF3E,OAAA;QACEiF,OAAO,EAAEA,CAAA,KAAM;UACb,IAAI1E,QAAQ,CAAC0D,IAAI,CAAC,CAAC,KAAK,EAAE,EAAEvD,aAAa,CAAC,IAAI,CAAC;QACjD,CAAE;QAAA6D,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,IAAIhE,UAAU,CAAC8C,MAAM,KAAK,CAAC,EAAE,oBAAOzD,OAAA;IAAKsE,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE7E,MAAMzB,OAAO,GAAGvC,UAAU,CAACE,YAAY,CAAC;EAExC,oBACEb,OAAA;IAAKsE,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCvE,OAAA;MAAAuE,QAAA,EAAKrB,OAAO,CAACD,IAAI,KAAK,QAAQ,GAAG,sCAAsC,GAAG;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3F3E,OAAA;MAAAuE,QAAA,GAAI,SAAO,EAAChE,QAAQ,EAAC,gBAAI;IAAA;MAAAiE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE7B,CAAClD,SAAS,gBACTzB,OAAA,CAAAE,SAAA;MAAAqE,QAAA,gBACEvE,OAAA;QAAGsE,SAAS,EAAC,OAAO;QAAAC,QAAA,GAAC,sBAAU,EAACtD,KAAK,EAAC,GAAC;MAAA;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3C3E,OAAA;QAAKsE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAC7BrB,OAAO,CAACD,IAAI,KAAK,QAAQ,IAAI,CAAClC,YAAY,iBACzCf,OAAA;UAAK4B,GAAG,EAAEsB,OAAO,CAACJ,MAAO;UAACoC,GAAG,EAAC,QAAQ;UAACZ,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC3D,EAEAzB,OAAO,CAACD,IAAI,KAAK,QAAQ,IAAIlC,YAAY,iBACxCf,OAAA,CAAAE,SAAA;UAAAqE,QAAA,gBACEvE,OAAA;YAAK4B,GAAG,EAAEsB,OAAO,CAACJ,MAAO;YAACoC,GAAG,EAAC,QAAQ;YAACZ,SAAS,EAAC;UAAoB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxE3E,OAAA;YAAK4B,GAAG,EAAEsB,OAAO,CAACF,QAAS;YAACkC,GAAG,EAAC,UAAU;YAACZ,SAAS,EAAC;UAAoB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eAC5E,CACH,EAEAzB,OAAO,CAACD,IAAI,KAAK,MAAM,iBACtBjD,OAAA;UAAK4B,GAAG,EAAEsB,OAAO,CAACF,QAAS;UAACkC,GAAG,EAAC,MAAM;UAACZ,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC3D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAEL,CAAC5D,YAAY,iBACZf,OAAA;QAAKsE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BvE,OAAA;UACEiD,IAAI,EAAC,MAAM;UACX2B,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAE1D,MAAO;UACd2D,QAAQ,EAAGC,CAAC,IAAK3D,SAAS,CAAC2D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC3CM,QAAQ,EAAE9D;QAAU;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACF3E,OAAA;UAAQiF,OAAO,EAAEtB,YAAa;UAACwB,QAAQ,EAAE9D,SAAU;UAAAkD,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRtD,SAAS,iBAAIrB,OAAA;UAAGsE,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAmC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CACN,EAEA5D,YAAY,iBACXf,OAAA;QAAKsE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BvE,OAAA;UAAAuE,QAAA,GAAG,yBACiB,eAAAvE,OAAA;YAAAuE,QAAA,EAASrB,OAAO,CAACd;UAAQ;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACJ3E,OAAA;UAAAuE,QAAA,GAAG,4BACe,eAAAvE,OAAA;YAAAuE,QAAA,EAASpD,MAAM,IAAI;UAAmB;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eACJ3E,OAAA;UAAAuE,QAAA,GAAG,iBAAe,EAAChD,KAAK,EAAC,GAAC,EAACZ,UAAU,CAAC8C,MAAM;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjD3E,OAAA;UAAAuE,QAAA,EAAG;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CACN;IAAA,eACD,CAAC,gBAEH3E,OAAA;MAAKsE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BvE,OAAA;QAAAuE,QAAA,GAAI,0BAAc,EAAChE,QAAQ,EAAC,GAAC;MAAA;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC3E,OAAA;QAAAuE,QAAA,GAAG,aACU,eAAAvE,OAAA;UAAAuE,QAAA,EAAShD;QAAK;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,YAAQ,eAAA3E,OAAA;UAAAuE,QAAA,EAAS5D,UAAU,CAAC8C;QAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eACJ3E,OAAA;QAAAuE,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrE,EAAA,CAjMID,WAAqB;AAAA+E,EAAA,GAArB/E,WAAqB;AAmM3B,eAAeA,WAAW;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}