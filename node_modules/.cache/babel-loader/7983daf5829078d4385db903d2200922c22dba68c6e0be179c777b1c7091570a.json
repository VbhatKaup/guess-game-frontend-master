{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\guess-game-frontend-master\\\\src\\\\pages\\\\GuessGhibli.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./GuessGhibli.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseNames = [\"question_2\", \"question_5\", \"question_10\", \"question_30\", \"question_250\", \"question_800\", \"question_4000\", \"question_future\", \"question_heat\", \"question_maine\", \"question_map\", \"question_number\", \"question_odd\", \"question_pomeranian\", \"question_react\", \"question_son\", \"salman khan\", \"bhaskar+vishnu+suresh\", \"ravi teja\", \"rashmika mandana\", \"priyanka chopra\", \"nana patekar\", \"mahesh babu\", \"jeff\", \"hrithik\", \"bramhanandam\", \"bhaskar\", \"raju\", \"shravan\", \"vineela+laxmi+poojita\"];\nconst extensions = [\"jpg\", \"jpeg\", \"png\"];\nconst GuessGhibli = () => {\n  _s();\n  var _current$baseName$mat;\n  const [userName, setUserName] = useState(\"\");\n  const [hasStarted, setHasStarted] = useState(false);\n  const [imagePairs, setImagePairs] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showOriginal, setShowOriginal] = useState(false);\n  const [timer, setTimer] = useState(40);\n  const [answer, setAnswer] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameEnded, setGameEnded] = useState(false);\n  const checkImage = src => {\n    return new Promise(resolve => {\n      const img = new Image();\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = src;\n    });\n  };\n  const findValidImage = async baseName => {\n    for (const ext of extensions) {\n      const url = `/images/${baseName}.${ext}`;\n      const exists = await checkImage(url);\n      if (exists) return url;\n    }\n    return null;\n  };\n  useEffect(() => {\n    const loadImages = async () => {\n      const pairs = [];\n      for (const base of baseNames) {\n        const ghibliImg = await findValidImage(`${base}_gibili`);\n        const originalImg = await findValidImage(base);\n        if (originalImg) {\n          pairs.push({\n            ghibli: ghibliImg || undefined,\n            original: originalImg,\n            baseName: base,\n            type: ghibliImg ? \"ghibli\" : \"quiz\"\n          });\n        }\n      }\n      setImagePairs(pairs);\n    };\n    loadImages();\n  }, []);\n  useEffect(() => {\n    if (gameEnded || !hasStarted) return;\n    const current = imagePairs[currentIndex];\n    if (!showOriginal) {\n      if (timer > 0) {\n        const interval = setInterval(() => setTimer(prev => prev - 1), 1000);\n        return () => clearInterval(interval);\n      } else {\n        setShowOriginal(true);\n      }\n    } else {\n      const timeout = setTimeout(() => {\n        if (currentIndex + 1 >= imagePairs.length) {\n          setGameEnded(true);\n        } else {\n          setCurrentIndex(prev => prev + 1);\n          setTimer(40);\n          setAnswer(\"\");\n          setSubmitted(false);\n          setShowOriginal(false);\n        }\n      }, 5000);\n      return () => clearTimeout(timeout);\n    }\n  }, [timer, showOriginal, currentIndex, imagePairs.length, gameEnded, hasStarted]);\n  const handleSubmit = () => {\n    setSubmitted(true);\n    const current = imagePairs[currentIndex];\n    const correctParts = current.baseName.toLowerCase().split(\"+\").map(part => part.trim());\n    let userAnswer = answer.toLowerCase().trim();\n\n    // Special handling for \"question_\" base names\n    if (current.baseName.toLowerCase().startsWith(\"question_\")) {\n      const questionMatch = current.baseName.match(/question_(\\w+)/i); // Match \"question_\" followed by word or number\n      if (questionMatch && questionMatch[1]) {\n        const correctAnswer = questionMatch[1]; // Extract the word or number (e.g., \"maine\" or \"10\")\n        if (userAnswer === correctAnswer) {\n          setScore(prev => prev + 1);\n          return; // Exit early if match found\n        }\n      }\n    }\n\n    // Fallback for other base names (e.g., names like \"salman khan\")\n    if (correctParts.some(name => userAnswer.includes(name))) {\n      setScore(prev => prev + 1);\n    }\n  };\n  if (!hasStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFA8 Welcome to Guess the Ghibli!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (userName.trim() !== \"\") setHasStarted(true);\n        },\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n  if (imagePairs.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 39\n  }, this);\n  const current = imagePairs[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guess-ghibli-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: current.type === \"ghibli\" ? \"Guess the Character (Ghibli Edition)\" : \"Quiz Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Hello, \", userName, \"! \\uD83D\\uDC4B\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), !gameEnded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timer\",\n        children: [\"\\u23F1\\uFE0F Timer: \", timer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [current.type === \"ghibli\" && !showOriginal && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: current.ghibli,\n          alt: \"Ghibli\",\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), current.type === \"ghibli\" && showOriginal && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: current.ghibli,\n            alt: \"Ghibli\",\n            className: \"image side-by-side\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: current.original,\n            alt: \"Original\",\n            className: \"image side-by-side\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), current.type === \"quiz\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: current.original,\n          alt: \"Quiz\",\n          className: \"quiz-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), !showOriginal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your guess\",\n          value: answer,\n          onChange: e => setAnswer(e.target.value),\n          disabled: submitted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: submitted,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), submitted && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          children: \"Answer submitted! Revealing soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), showOriginal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2705 Correct Answer: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: current.baseName.toLowerCase().startsWith(\"question_\") ? ((_current$baseName$mat = current.baseName.match(/question_(\\w+)/i)) === null || _current$baseName$mat === void 0 ? void 0 : _current$baseName$mat[1]) || current.baseName : current.baseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCDD Your answer: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: answer || \"(No answer given)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Score: \", score, \"/\", imagePairs.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Next image in 1 second...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-final\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uD83C\\uDF89 Game Over, \", userName, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your final score is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [score, \" out of \", imagePairs.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setHasStarted(false);\n          setImagePairs([]);\n          setCurrentIndex(0);\n          setShowOriginal(false);\n          setTimer(2);\n          setAnswer(\"\");\n          setSubmitted(false);\n          setScore(0);\n          setGameEnded(false);\n        },\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(GuessGhibli, \"qVeverQ0mUvJKspp5TfEDLF478s=\");\n_c = GuessGhibli;\nexport default GuessGhibli;\nvar _c;\n$RefreshReg$(_c, \"GuessGhibli\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","baseNames","extensions","GuessGhibli","_s","_current$baseName$mat","userName","setUserName","hasStarted","setHasStarted","imagePairs","setImagePairs","currentIndex","setCurrentIndex","showOriginal","setShowOriginal","timer","setTimer","answer","setAnswer","submitted","setSubmitted","score","setScore","gameEnded","setGameEnded","checkImage","src","Promise","resolve","img","Image","onload","onerror","findValidImage","baseName","ext","url","exists","loadImages","pairs","base","ghibliImg","originalImg","push","ghibli","undefined","original","type","current","interval","setInterval","prev","clearInterval","timeout","setTimeout","length","clearTimeout","handleSubmit","correctParts","toLowerCase","split","map","part","trim","userAnswer","startsWith","questionMatch","match","correctAnswer","some","name","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","alt","disabled","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/guess-game-frontend-master/src/pages/GuessGhibli.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./GuessGhibli.css\";\n\ntype ImagePair = {\n  ghibli?: string;\n  original: string;\n  baseName: string;\n  type: \"ghibli\" | \"quiz\";\n};\n\nconst baseNames = [\n  \"question_2\",\n  \"question_5\",\n  \"question_10\",\n  \"question_30\",\n  \"question_250\",\n  \"question_800\",\n  \"question_4000\",\n  \"question_future\",\n  \"question_heat\",\n  \"question_maine\",\n  \"question_map\",\n  \"question_number\",\n  \"question_odd\",\n  \"question_pomeranian\",\n  \"question_react\",\n  \"question_son\",\n  \"salman khan\",\n  \"bhaskar+vishnu+suresh\",\n  \"ravi teja\",\n  \"rashmika mandana\",\n  \"priyanka chopra\",\n  \"nana patekar\",\n  \"mahesh babu\",\n  \"jeff\",\n  \"hrithik\",\n  \"bramhanandam\",\n  \"bhaskar\",\n  \"raju\",\n  \"shravan\",\n  \"vineela+laxmi+poojita\",\n];\n\nconst extensions = [\"jpg\", \"jpeg\", \"png\"];\n\nconst GuessGhibli: React.FC = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [hasStarted, setHasStarted] = useState(false);\n  const [imagePairs, setImagePairs] = useState<ImagePair[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showOriginal, setShowOriginal] = useState(false);\n  const [timer, setTimer] = useState(40);\n  const [answer, setAnswer] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameEnded, setGameEnded] = useState(false);\n\n  const checkImage = (src: string): Promise<boolean> => {\n    return new Promise((resolve) => {\n      const img = new Image();\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = src;\n    });\n  };\n\n  const findValidImage = async (baseName: string): Promise<string | null> => {\n    for (const ext of extensions) {\n      const url = `/images/${baseName}.${ext}`;\n      const exists = await checkImage(url);\n      if (exists) return url;\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    const loadImages = async () => {\n      const pairs: ImagePair[] = [];\n\n      for (const base of baseNames) {\n        const ghibliImg = await findValidImage(`${base}_gibili`);\n        const originalImg = await findValidImage(base);\n\n        if (originalImg) {\n          pairs.push({\n            ghibli: ghibliImg || undefined,\n            original: originalImg,\n            baseName: base,\n            type: ghibliImg ? \"ghibli\" : \"quiz\",\n          });\n        }\n      }\n\n      setImagePairs(pairs);\n    };\n\n    loadImages();\n  }, []);\n\n  useEffect(() => {\n    if (gameEnded || !hasStarted) return;\n\n    const current = imagePairs[currentIndex];\n\n    if (!showOriginal) {\n      if (timer > 0) {\n        const interval = setInterval(() => setTimer((prev) => prev - 1), 1000);\n        return () => clearInterval(interval);\n      } else {\n        setShowOriginal(true);\n      }\n    } else {\n      const timeout = setTimeout(() => {\n        if (currentIndex + 1 >= imagePairs.length) {\n          setGameEnded(true);\n        } else {\n          setCurrentIndex((prev) => prev + 1);\n          setTimer(40);\n          setAnswer(\"\");\n          setSubmitted(false);\n          setShowOriginal(false);\n        }\n      }, 5000);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [timer, showOriginal, currentIndex, imagePairs.length, gameEnded, hasStarted]);\n\n  const handleSubmit = () => {\n    setSubmitted(true);\n\n    const current = imagePairs[currentIndex];\n    const correctParts = current.baseName.toLowerCase().split(\"+\").map((part) => part.trim());\n    let userAnswer = answer.toLowerCase().trim();\n\n    // Special handling for \"question_\" base names\n    if (current.baseName.toLowerCase().startsWith(\"question_\")) {\n      const questionMatch = current.baseName.match(/question_(\\w+)/i); // Match \"question_\" followed by word or number\n      if (questionMatch && questionMatch[1]) {\n        const correctAnswer = questionMatch[1]; // Extract the word or number (e.g., \"maine\" or \"10\")\n        if (userAnswer === correctAnswer) {\n          setScore((prev) => prev + 1);\n          return; // Exit early if match found\n        }\n      }\n    }\n\n    // Fallback for other base names (e.g., names like \"salman khan\")\n    if (correctParts.some((name) => userAnswer.includes(name))) {\n      setScore((prev) => prev + 1);\n    }\n  };\n\n  if (!hasStarted) {\n    return (\n      <div className=\"login-screen\">\n        <h2>🎨 Welcome to Guess the Ghibli!</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your name\"\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n        />\n        <button\n          onClick={() => {\n            if (userName.trim() !== \"\") setHasStarted(true);\n          }}\n        >\n          Start Game\n        </button>\n      </div>\n    );\n  }\n\n  if (imagePairs.length === 0) return <div className=\"loading\">Loading...</div>;\n\n  const current = imagePairs[currentIndex];\n\n  return (\n    <div className=\"guess-ghibli-container\">\n      <h1>{current.type === \"ghibli\" ? \"Guess the Character (Ghibli Edition)\" : \"Quiz Mode\"}</h1>\n      <h2>Hello, {userName}! 👋</h2>\n\n      {!gameEnded ? (\n        <>\n          <p className=\"timer\">⏱️ Timer: {timer}s</p>\n          <div className=\"image-container\">\n            {current.type === \"ghibli\" && !showOriginal && (\n              <img src={current.ghibli} alt=\"Ghibli\" className=\"image\" />\n            )}\n\n            {current.type === \"ghibli\" && showOriginal && (\n              <>\n                <img src={current.ghibli} alt=\"Ghibli\" className=\"image side-by-side\" />\n                <img src={current.original} alt=\"Original\" className=\"image side-by-side\" />\n              </>\n            )}\n\n            {current.type === \"quiz\" && (\n              <img src={current.original} alt=\"Quiz\" className=\"quiz-image\" />\n            )}\n          </div>\n\n          {!showOriginal && (\n            <div className=\"input-section\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter your guess\"\n                value={answer}\n                onChange={(e) => setAnswer(e.target.value)}\n                disabled={submitted}\n              />\n              <button onClick={handleSubmit} disabled={submitted}>\n                Submit\n              </button>\n              {submitted && <p className=\"feedback\">Answer submitted! Revealing soon...</p>}\n            </div>\n          )}\n\n          {showOriginal && (\n            <div className=\"result-section\">\n              <p>\n                ✅ Correct Answer: <strong>\n                  {current.baseName.toLowerCase().startsWith(\"question_\")\n                    ? current.baseName.match(/question_(\\w+)/i)?.[1] || current.baseName\n                    : current.baseName}\n                </strong>\n              </p>\n              <p>\n                📝 Your answer: <strong>{answer || \"(No answer given)\"}</strong>\n              </p>\n              <p>Current Score: {score}/{imagePairs.length}</p>\n              <p>Next image in 1 second...</p>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"result-final\">\n          <h2>🎉 Game Over, {userName}!</h2>\n          <p>Your final score is:</p>\n          <h3>\n            {score} out of {imagePairs.length}\n          </h3>\n          <button\n            onClick={() => {\n              setHasStarted(false);\n              setImagePairs([]);\n              setCurrentIndex(0);\n              setShowOriginal(false);\n              setTimer(2);\n              setAnswer(\"\");\n              setSubmitted(false);\n              setScore(0);\n              setGameEnded(false);\n            }}\n          >\n            Play Again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GuessGhibli;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}